load("@rules_erlang//:eunit2.bzl", "eunit")
load("@rules_erlang//:xref2.bzl", "xref")
load("@rules_erlang//:dialyze.bzl", "dialyze", "plt")
load(
    "//:rabbitmq.bzl",
    "RABBITMQ_DIALYZER_OPTS",
    "assert_suites",
    "broker_for_integration_suites",
    rabbitmq_app = "rabbitmq_app2",
    rabbitmq_integration_suite = "rabbitmq_integration_suite2",
    rabbitmq_suite = "rabbitmq_suite2",
)
load("@rules_erlang//:erlang_bytecode2.bzl", "erlang_bytecode")

rabbitmq_app(
    name = "erlang_app",
    app_name = "rabbitmq_web_stomp",
    deps = [
        "//deps/rabbit",
        "//deps/rabbit_common",
        "//deps/rabbitmq_stomp",
        "@erlang_packages//cowboy",
    ],
)

xref(
    name = "xref",
    target = ":erlang_app",
    additional_libs = [
        "@erlang_packages//cowlib",
    ],
)

plt(
    name = "deps_plt",
    for_target = ":erlang_app",
    ignore_warnings = True,
    libs = ["//deps/rabbitmq_cli:elixir"],  # keep
    plt = "//:base_plt",
    deps = [
        "@erlang_packages//cowlib",
    ],
)

dialyze(
    name = "dialyze",
    dialyzer_opts = RABBITMQ_DIALYZER_OPTS,
    plt = ":deps_plt",
    target = ":erlang_app",
)

eunit(
    name = "eunit",
    compiled_suites = [
        ":test_helpers",
    ],
    target = ":test_erlang_app",
)

broker_for_integration_suites()

erlang_bytecode(
    name = "test_helpers",
    testonly = True,
    srcs = glob(
        ["test/**/*.erl"],
        exclude = ["test/*_SUITE.erl"],
    ),
    hdrs = glob([
        "include/*.hrl",
        "src/*.hrl",
    ]),
    dest = "test",
    erlc_opts = "//:test_erlc_opts",
    deps = [
        ":test_erlang_app",
    ],
)

rabbitmq_integration_suite(
    name = "amqp_stomp_SUITE",
    additional_beam = [
        ":test_helpers",
    ],
)

rabbitmq_integration_suite(
    name = "config_schema_SUITE",
)

rabbitmq_integration_suite(
    name = "cowboy_websocket_SUITE",
    additional_beam = [
        ":test_helpers",
    ],
)

rabbitmq_integration_suite(
    name = "proxy_protocol_SUITE",
    additional_beam = [
        ":test_helpers",
    ],
)

rabbitmq_integration_suite(
    name = "raw_websocket_SUITE",
    additional_beam = [
        ":test_helpers",
    ],
)

rabbitmq_suite(
    name = "unit_SUITE",
    size = "small",
)

assert_suites()
